serial: |
  ${
      function($stepFuncs){
          $stepFuncs~>$reduce(function($acc, $stepFunc){
              (
                $break := $acc.break;
                $res := $stepFunc();
                $break ? $acc :$res = 'ok'
                            ? {'result':$append($acc.result, $res), 'break':false}
                            : {'break':true, 'result':$acc.result};
  
              )
          },{'break':false, 'result':[]})
      }
  }

break: false
serial2: |
  ${
      function($stepFuncs){
          $stepFuncs ~> $map(function($func){
              $not(break)?(
                $res:=$func();
                $res = 'ok'? $res: ($set('/break', true);'fail')
              ):'-'
          })           
      }
  
  }

ok: |
  ${
      function(){
        'ok'
      }
  }

fail: |
  ${
    function(){
      'fail'
    }
  }

run$: |  #will stop on fail
  [ok,ok,ok,fail,ok,ok] ~> serial2